*Markdown* shortcuts for marking up documents

  __  __            _       _                     ~
 |  \/  |          | |     | |                    ~
 | \  / | __ _ _ __| | ____| | _____      ___ __  ~
 | |\/| |/ _` | '__| |/ / _` |/ _ \ \ /\ / / '_ \ ~
 | |  | | (_| | |  |   < (_| | (_) \ V  V /| | | |~
 |_|  |_|\__,_|_|  |_|\_\__,_|\___/ \_/\_/ |_| |_|~

Easily create markdown documentation.

====================================================================
CONTENTS                                            *MarkdownContents*

    1. Usage ................ |MarkdownUsage|
    2. Mappings ............. |MarkdownMappings|
    3. Funtions ............. |MarkdownFunctions|

====================================================================
Section 1: Usage                                       *MarkdownUsage*

This plugin with automatically provide syntax highlighting for
Markdown files (files ending in .md).

It also provides some shortcuts that could be useful in writing your own
Markdown documents.

====================================================================
Section 2: Mappings                                 *MarkdownMappings*

Visual shortcuts

  vmap <buffer>          qtf    :call MdMakeFootnotes('v')<CR>
  vmap <buffer>          qc     :call MdMakeCodeBlock()<CR>
  vmap <buffer>          qk     :call MdMakeLink('v')<CR>
  vmap <buffer>          qb     :call MdMakeBold('v')<CR>
  vmap <buffer>          qfc    :call MdCapitalizeFirstLetterInWords('v')<CR>
  vmap <buffer>          qft    :call MdTitlizeWords('v')<CR>

Normal shortcuts

  nmap <buffer>          qft    :call MdTitlizeWords('n')<CR>
  nmap <buffer>          qs     :call MdSelectTerm('', 'true')<CR>
  nmap <buffer>          qfc    :call MdCapitalizeFirstLetterInWords()<CR>
  nmap <buffer>          qj     :call MdResolveSnippet()<CR>
  nmap <buffer>          qtt    :call MdCopyFootnoteReference()<CR>
  nmap <buffer>          qtr    :call MdPasteFootnoteReference()<CR>
  nmap <buffer> <silent> qtf    :call MdMakeFootnotes('n')<CR>
  nmap <buffer>          qi     :call MdMakeImg('n', 'images/')<CR>
  nmap <buffer>          qI     :call MdMakeImg('i', 'images/')<CR>
  nmap <buffer>          qk     :call MdMakeLink('n')<CR>i
  nmap <buffer>          qc     :call MdMarkInlineCode()<CR>
  nmap <buffer>          qlu    :call MdMakeUnorderedList()<CR>
  nmap <buffer>          qlo    :call MdMakeOrderedList()<CR>
  nmap <buffer>          qb     :call MdMakeBold('n')<CR>
  nmap <buffer>          q=     :call MdMakeH1()<CR>
  nmap <buffer>          q-     :call MdMakeH2()<CR>
  nmap <buffer>          qlf    :call MdFixOrderedList()<CR>
  nmap <buffer>          qz     :call MdFold()<CR>
  nmap <buffer>          qp     !mdprev %<CR><CR>
  nmap <buffer>          qP     !mdprev --pdf %<CR><CR>

====================================================================
Section 3: Functions                               *MarkdownFunctions*

  |MdMakeH1|()
  |MdMakeH2|()
  |MdMakeHeader|(character)
  |MdSelectTerm|(...)
  |MdMarkTerm|(character, ...)
  |MdCreateLinkPromptUri|(...)
  |MdMarkTerms|(...)
  |MdMarkTermExt|(lineIndex, start, stop, characterStart, characterEnd)
  |MdMarkInlineCode|()
  |function|! MdMakeBold()
  |MdMakeBold|(mode)
  |MdMakeImg|(mode, ...)
  |MdMakeLink|(mode)
  |MdSplitOnBounds|(strValue, start, stop)
  |MdMakeLinkUsingCurrentTerm|(mode)
  |MdMarkLine|(character)
  |MdMakeCodeBlock|()
  |MdCopyFootnoteReference|()
  |MdPasteFootnoteReference|()
  |MdMakeFootnotes|(mode)
  |MdMakeFootnotesNorm|(...)
  |MdMakeFootnotesVis|()
  |MdMakeUnorderedList|()
  |MdMakeOrderedList|()
  |MdFixOrderedList|()
  |MdFoldLevel|(lnum)
  |MdFoldText|()
  |MdFold|()
  |MdReplaceSubstring|(line, subString, startPos, endPos)
  |MdResolveSnippet|()
  |MdGetSelectedTerm|()
  |MdModifyTerms|(mode, ...)
  |MdTest(...)
  |MdTrimSpaces|(term)
  |MdCapitalizeFirstLetterInWords|(...)
  |MdTitlizeWords|(...)

*MdMakeH1* (), *MdMakeH2* ()

Create headers from text on current line.  H1 headers use '=', H2 headers use '-'.

e.g., 

This is a title
===============

*MdMakeHeader* (character)

Used by MdMakeH1, MdMakeH2.

*MdSelectTerm* (...)

Select the term under the cursor.  By default, term boundaries consist of white space and the bounds of a line ('^' and '$'; start of the line, end of the line).

*MdMarkTerm* (character, ...)
*MdCreateLinkPromptUri* (...)
*MdMarkTerms* (...)
*MdMarkTermExt* (lineIndex, start, stop, characterStart, characterEnd)
*MdMarkInlineCode* ()
*function*! MdMakeBold()
*MdMakeBold* (mode)
*MdMakeImg* (mode, ...)
*MdMakeLink* (mode)
*MdSplitOnBounds* (strValue, start, stop)
*MdMakeLinkUsingCurrentTerm* (mode)
*MdMarkLine* (character)
*MdMakeCodeBlock* ()
*MdCopyFootnoteReference* ()
*MdPasteFootnoteReference* ()
*MdMakeFootnotes* (mode)
*MdMakeFootnotesNorm* (...)
*MdMakeFootnotesVis* ()
*MdMakeUnorderedList* ()
*MdMakeOrderedList* ()
*MdFixOrderedList* ()
*MdFoldLevel* (lnum)
*MdFoldText* ()
*MdFold* ()
*MdReplaceSubstring* (line, subString, startPos, endPos)
*MdResolveSnippet* ()
*MdGetSelectedTerm* ()
*MdModifyTerms* (mode, ...)
*MdTest* (...)
*MdTrimSpaces* (term)
*MdCapitalizeFirstLetterInWords* (...)
*MdTitlizeWords* (...)

